[{"/Users/user/Desktop/work/my-app/src/index.js":"1","/Users/user/Desktop/work/my-app/src/App.js":"2","/Users/user/Desktop/work/my-app/src/reportWebVitals.js":"3","/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js":"4","/Users/user/Desktop/work/my-app/src/Redux/slice.js":"5","/Users/user/Desktop/work/my-app/src/components/Modal/index.js":"6","/Users/user/Desktop/work/my-app/src/Hooks/outsideClick.js":"7","/Users/user/Desktop/work/my-app/src/components/UserContainer/index.js":"8","/Users/user/Desktop/work/my-app/src/Hooks/getUsers.js":"9"},{"size":500,"mtime":1643012937317,"results":"10","hashOfConfig":"11"},{"size":115,"mtime":1643016453347,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1642595129508,"results":"13","hashOfConfig":"11"},{"size":1913,"mtime":1642771336285,"results":"14","hashOfConfig":"11"},{"size":869,"mtime":1642770547777,"results":"15","hashOfConfig":"11"},{"size":1815,"mtime":1643010961796,"results":"16","hashOfConfig":"11"},{"size":384,"mtime":1643011831046,"results":"17","hashOfConfig":"11"},{"size":516,"mtime":1642766598394,"results":"18","hashOfConfig":"11"},{"size":546,"mtime":1643011825401,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pkqr0k",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/user/Desktop/work/my-app/src/index.js",[],"/Users/user/Desktop/work/my-app/src/App.js",[],"/Users/user/Desktop/work/my-app/src/reportWebVitals.js",[],["43","44"],"/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js",["45"],"import { React, useState } from \"react\";\nimport Modal from \"../Modal\";\nimport UserContainer from \"../UserContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteUser, changeName } from \"../../Redux/slice\";\n\nconst SuccessContent = ({ handelUpdate }) => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [chooseItemIdx, setChooseItemIdx] = useState(-1);\n  const reduxState = useSelector((state) => state.users.data);\n\n  const handelInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handelDelete = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  const clearSearch = () => {\n    setChooseItemIdx(-1);\n    setInputValue(\"\");\n  };\n\n  const onOpenModal = (name, idx) => {\n    setChooseItemIdx(idx);\n    setIsOpenModal(true);\n  };\n\n  const onContinue = (item, name) => {\n    dispatch(changeName({user: item, newName: name}));\n    setIsOpenModal(false)\n  };\n\n  return (\n    <div className=\"root\">\n      <button\n        onClick={() => {\n          handelUpdate();\n          clearSearch();\n        }}\n      >\n        загрузить еще\n      </button>\n      <input value={inputValue} onInput={(e) => handelInput(e)} />\n      {reduxState?.map((item, idx) => {\n        if (item?.name?.first.toLowerCase().includes(inputValue.toLowerCase()))\n          return (\n            <UserContainer\n              item={item}\n              idx={idx}\n              handelDelete={handelDelete}\n              onOpenModal={onOpenModal}\n              key={item.login.uuid}\n            />\n          );\n      })}\n      <Modal\n        isOpen={isOpenModal}\n        value={reduxState?.[chooseItemIdx]?.name.first}\n        onClose={() => setIsOpenModal(false)}\n        onContinue={(name) => onContinue(reduxState?.[chooseItemIdx], name)}\n      />\n    </div>\n  );\n};\n\nexport default SuccessContent;\n",["46","47"],"/Users/user/Desktop/work/my-app/src/Redux/slice.js",[],"/Users/user/Desktop/work/my-app/src/components/Modal/index.js",["48"],"import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport useOutsideClick from \"../../Hooks/outsideClick\";\n\nconst Modal = ({ isOpen, onClose, onContinue, value }) => {\n  const [changingValue, setChangingValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [firstRender, setFirstRender] = useState(true);\n  const OutsideClick = useOutsideClick;\n  const modalRef = useRef(null);\n\n  if (!isOpen) return null;\n\n  const myGreeting = setTimeout(() => {\n    if (firstRender) {\n      setChangingValue(value);\n      setFirstRender(false);\n    }\n  }, 0);\n\n  const handelInput = (e) => {\n    if (!e.target.value) setError(\"Имя не можеть быть пустым\");\n    else setError(\"\");\n    setChangingValue(e.target.value);\n  };\n\n  const handelClose = () => {\n    setError('');\n    setFirstRender(true);\n    onClose();\n  };\n\n  const handelContinue = () => {\n    if (!error)\n    {\n      setError('');\n      setFirstRender(true);\n      onContinue(changingValue);\n    }\n  };\n\n  OutsideClick(isOpen, modalRef, handelClose);\n\n  return ReactDOM.createPortal(\n    <div className=\"rootModal\">\n      <div className=\"modal\" ref={modalRef} id=\"modal\">\n        <button className=\"close\" onClick={() => handelClose()}>\n          x\n        </button>\n        <span className=\"text\">Хотите изменить имя?</span>\n        <input value={changingValue} onInput={(e) => handelInput(e)} />\n        {!error.lenght && <div className=\"error\">{error}</div>}\n        <div className=\"buttons\">\n          <button onClick={() => handelClose()}>Отмена</button>\n          <button onClick={() => handelContinue()}>Продолжить</button>\n        </div>\n      </div>\n    </div>,\n    document.getElementById(\"portal\")\n  );\n};\n\nexport default Modal;\n",["49","50"],"/Users/user/Desktop/work/my-app/src/Hooks/outsideClick.js",[],"/Users/user/Desktop/work/my-app/src/components/UserContainer/index.js",[],"/Users/user/Desktop/work/my-app/src/Hooks/getUsers.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":48,"column":36,"nodeType":"57","messageId":"58","endLine":48,"endColumn":38},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":15,"column":9,"nodeType":"63","messageId":"64","endLine":15,"endColumn":19},{"ruleId":"51","replacedBy":"65"},{"ruleId":"53","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["67"],["68"],"no-unused-vars","'myGreeting' is assigned a value but never used.","Identifier","unusedVar",["67"],["68"],"no-global-assign","no-unsafe-negation"]