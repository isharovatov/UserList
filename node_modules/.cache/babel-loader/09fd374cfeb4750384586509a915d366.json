{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Modal from \"../Modal\";\nimport UserContainer from \"../UserContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteUser, changeName } from \"../../Redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuccessContent = _ref => {\n  _s();\n\n  var _reduxState$chooseIte;\n\n  let {\n    users,\n    handelUpdate\n  } = _ref;\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [chooseItemIdx, setChooseItemIdx] = useState(-1);\n  const reduxState = useSelector(state => state.users.data);\n\n  const handelInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handelDelete = id => {\n    dispatch(deleteUser(id));\n  };\n\n  const chooseName = (e, item) => {};\n\n  const clearSearch = () => {\n    setChooseItemIdx(-1);\n    setInputValue(\"\");\n  };\n\n  const onOpenModal = (name, idx) => {\n    setChooseItemIdx(idx);\n    setIsOpenModal(true);\n  };\n\n  const onContinue = (item, name) => {\n    dispatch(changeName({\n      user: item,\n      newName: name\n    }));\n    setIsOpenModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handelUpdate(\"https://randomuser.me/api/?results=30\");\n        clearSearch();\n      },\n      children: \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onInput: e => handelInput(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), reduxState === null || reduxState === void 0 ? void 0 : reduxState.map((item, idx) => {\n      var _item$name;\n\n      if (item !== null && item !== void 0 && (_item$name = item.name) !== null && _item$name !== void 0 && _item$name.first.toLowerCase().includes(inputValue.toLowerCase())) return /*#__PURE__*/_jsxDEV(UserContainer, {\n        item: item,\n        idx: idx,\n        handelDelete: handelDelete,\n        onOpenModal: onOpenModal\n      }, item.login.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      value: reduxState === null || reduxState === void 0 ? void 0 : (_reduxState$chooseIte = reduxState[chooseItemIdx]) === null || _reduxState$chooseIte === void 0 ? void 0 : _reduxState$chooseIte.name.first,\n      onClose: () => setIsOpenModal(false),\n      chooseName: e => chooseName(e, reduxState === null || reduxState === void 0 ? void 0 : reduxState[chooseItemIdx]),\n      onContinue: name => onContinue(reduxState === null || reduxState === void 0 ? void 0 : reduxState[chooseItemIdx], name),\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SuccessContent, \"A6faC64v6QzJw8hy9wIJSdIH1GY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SuccessContent;\nexport default SuccessContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessContent\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js"],"names":["React","useState","Modal","UserContainer","useSelector","useDispatch","deleteUser","changeName","SuccessContent","users","handelUpdate","dispatch","inputValue","setInputValue","isOpenModal","setIsOpenModal","chooseItemIdx","setChooseItemIdx","reduxState","state","data","handelInput","e","target","value","handelDelete","id","chooseName","item","clearSearch","onOpenModal","name","idx","onContinue","user","newName","map","first","toLowerCase","includes","login","uuid","error"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\nimport Modal from \"../Modal\";\nimport UserContainer from \"../UserContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteUser, changeName } from \"../../Redux/slice\";\n\nconst SuccessContent = ({ users, handelUpdate }) => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [chooseItemIdx, setChooseItemIdx] = useState(-1);\n  const reduxState = useSelector((state) => state.users.data);\n\n  const handelInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handelDelete = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  const chooseName = (e, item) => {\n   \n  };\n\n  const clearSearch = () => {\n    setChooseItemIdx(-1);\n    setInputValue(\"\");\n  };\n\n  const onOpenModal = (name, idx) => {\n    setChooseItemIdx(idx);\n    setIsOpenModal(true);\n  };\n\n  const onContinue = (item, name) => {\n    dispatch(changeName({user: item, newName: name}));\n    setIsOpenModal(false)\n  };\n\n  return (\n    <div className=\"root\">\n      <button\n        onClick={() => {\n          handelUpdate(\"https://randomuser.me/api/?results=30\");\n          clearSearch();\n        }}\n      >\n        загрузить еще\n      </button>\n      <input value={inputValue} onInput={(e) => handelInput(e)} />\n      {reduxState?.map((item, idx) => {\n        if (item?.name?.first.toLowerCase().includes(inputValue.toLowerCase()))\n          return (\n            <UserContainer\n              item={item}\n              idx={idx}\n              handelDelete={handelDelete}\n              onOpenModal={onOpenModal}\n              key={item.login.uuid}\n            />\n          );\n      })}\n      <Modal\n        isOpen={isOpenModal}\n        value={reduxState?.[chooseItemIdx]?.name.first}\n        onClose={() => setIsOpenModal(false)}\n        chooseName={(e) => chooseName(e, reduxState?.[chooseItemIdx])}\n        onContinue={(name) => onContinue(reduxState?.[chooseItemIdx], name)}\n        error={error}\n      />\n    </div>\n  );\n};\n\nexport default SuccessContent;\n"]},"metadata":{},"sourceType":"module"}