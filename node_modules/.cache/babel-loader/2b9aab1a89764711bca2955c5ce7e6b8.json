{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport getUsers from \"../Redux/slice\";\n\nconst axios = require('axios');\n\nconst useGetUser = async url => {\n  try {\n    const response = await axios.get(url);\n    console.log(response.data.re);\n  } catch (error) {\n    console.error(error);\n  } // const [status, setStatus] = useState('loading');\n  // const [error, setError] = useState('');\n  // const [resp, setResp] = useState([]);\n  // axios.get(url).then(responce => {\n  //   try{\n  //     // console.log(responce);\n  //     setResp(responce.data.results)\n  //     setStatus('succses')\n  //     setError('')\n  //   }\n  //   catch(e) {\n  //     // console.log(e);\n  //     setStatus('error')\n  //     setError(e)\n  //     setResp([])\n  //     return(e)\n  //   }\n  // })\n  // console.log(resp, status, error);\n  // return {resp, status, error}\n  // const [status, setStatus] = useState();\n  // const [error, setError] = useState();\n  // const [resp, setResp] = useState();\n  // const getUsers = async () => {\n  //   try{\n  //     let response = await fetch(url);\n  //     let json = await response.json();\n  //     console.log('try hook', json);\n  //     console.log(response.ok);\n  //     if (response.ok) return json.results\n  //     setResp(json.results);\n  //     setStatus(\"success\");\n  //   }\n  //    catch(error) {\n  //     setError(error);\n  //     setStatus(\"error\");\n  //     console.log('error');\n  //   }\n  // }\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n  // return { resp, status, error };\n\n};\n\nexport default useGetUser;","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/Hooks/getUsers.js"],"names":["useEffect","useRef","useState","useDispatch","getUsers","axios","require","useGetUser","url","response","get","console","log","data","re","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,UAAU,GAAG,MAAOC,GAAP,IAAe;AAEhC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,EAA1B;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,GAP+B,CAShC;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACD,CAnED;;AAqEA,eAAeR,UAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport getUsers from \"../Redux/slice\";\n\nconst axios = require('axios');\n\nconst useGetUser = async (url) => {\n\n  try {\n    const response = await axios.get(url);\n    console.log(response.data.re);\n  } catch (error) {\n    console.error(error);\n  }\n\n  // const [status, setStatus] = useState('loading');\n  // const [error, setError] = useState('');\n  // const [resp, setResp] = useState([]);\n\n\n  // axios.get(url).then(responce => {\n  //   try{\n  //     // console.log(responce);\n  //     setResp(responce.data.results)\n  //     setStatus('succses')\n  //     setError('')\n  //   }\n  //   catch(e) {\n  //     // console.log(e);\n  //     setStatus('error')\n  //     setError(e)\n  //     setResp([])\n  //     return(e)\n  //   }\n  // })\n\n  // console.log(resp, status, error);\n  // return {resp, status, error}\n\n\n\n\n\n\n  // const [status, setStatus] = useState();\n  // const [error, setError] = useState();\n  // const [resp, setResp] = useState();\n\n  // const getUsers = async () => {\n  //   try{\n  //     let response = await fetch(url);\n  //     let json = await response.json();\n\n  //     console.log('try hook', json);\n  //     console.log(response.ok);\n\n  //     if (response.ok) return json.results\n\n  //     setResp(json.results);\n  //     setStatus(\"success\");\n  //   }\n  //    catch(error) {\n  //     setError(error);\n  //     setStatus(\"error\");\n  //     console.log('error');\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n\n  // return { resp, status, error };\n};\n\nexport default useGetUser;\n"]},"metadata":{},"sourceType":"module"}