{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\"; // import \"./SuccessContent.css\";\n\nimport Modal from \"../Modal\";\nimport UserContainer from \"../UserContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../Redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuccessContent = _ref => {\n  _s();\n\n  var _data$chooseItemIdx;\n\n  let {\n    users,\n    handelUpdate\n  } = _ref;\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [initialValue, setInitialValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [chooseItemIdx, setChooseItemIdx] = useState(-1);\n  const reduxState = useSelector(state => state.users.data);\n  useEffect(() => {\n    if (!data.length) {\n      setData(users);\n      dispatch(getUsers(users));\n    }\n  });\n\n  const handelInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handelDelete = id => {\n    const arr = reduxState.filter(item => {\n      console.log(item.login.uuid === id);\n      return item.login.uuid !== id;\n    });\n    setData(arr);\n    dispatch(getUsers(arr));\n  };\n\n  const chooseName = (e, item) => {\n    if (!e.target.value) setError(\"Имя не можеть быть пустым\");else setError(\"\");\n    const array = reduxState.map(el => {\n      if (item.login.uuid === el.login.uuid) item.name.first = e.target.value;\n      return el;\n    });\n    setData(array);\n    dispatch(getUsers(array));\n  };\n\n  const clearSearch = () => {\n    setChooseItemIdx(-1);\n    setInputValue(\"\");\n  };\n\n  const onOpenModal = (name, idx) => {\n    setInitialValue(name);\n    setChooseItemIdx(idx);\n    setIsOpenModal(true);\n  };\n\n  const onCloseModal = item => {\n    const array = reduxState.map(el => {\n      if (item.login.uuid === el.login.uuid) item.name.first = initialValue;\n      return el;\n    });\n    setIsOpenModal(false);\n    setData(array);\n    dispatch(getUsers(array));\n  };\n\n  const onContinue = name => {\n    console.log(name);\n\n    if (!error.length) {\n      setIsOpenModal(false);\n      const array = reduxState.map((item, idx) => {\n        if (idx === chooseItemIdx) {\n          return { ...item,\n            name: { ...item.name,\n              first: name\n            }\n          };\n        }\n\n        return item;\n      });\n      console.log(array);\n      dispatch(getUsers(array));\n      setData(array);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handelUpdate(\"https://randomuser.me/api/?results=30\");\n        clearSearch();\n      },\n      children: \"\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onInput: e => handelInput(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), reduxState === null || reduxState === void 0 ? void 0 : reduxState.map((item, idx) => {\n      var _item$name;\n\n      if (item !== null && item !== void 0 && (_item$name = item.name) !== null && _item$name !== void 0 && _item$name.first.toLowerCase().includes(inputValue.toLowerCase())) return /*#__PURE__*/_jsxDEV(UserContainer, {\n        item: item,\n        idx: idx,\n        handelDelete: handelDelete,\n        onOpenModal: onOpenModal\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      value: data === null || data === void 0 ? void 0 : (_data$chooseItemIdx = data[chooseItemIdx]) === null || _data$chooseItemIdx === void 0 ? void 0 : _data$chooseItemIdx.name.first,\n      onClose: () => onCloseModal(data === null || data === void 0 ? void 0 : data[chooseItemIdx]),\n      chooseName: e => chooseName(e, data === null || data === void 0 ? void 0 : data[chooseItemIdx]),\n      onContinue: name => onContinue(name),\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SuccessContent, \"1zf3HzUkZJq+ChM4RmngE1N05Ec=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SuccessContent;\nexport default SuccessContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessContent\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/components/SuccessContent/index.js"],"names":["React","useState","useEffect","Modal","UserContainer","useSelector","useDispatch","getUsers","SuccessContent","users","handelUpdate","dispatch","data","setData","inputValue","setInputValue","initialValue","setInitialValue","error","setError","isOpenModal","setIsOpenModal","chooseItemIdx","setChooseItemIdx","reduxState","state","length","handelInput","e","target","value","handelDelete","id","arr","filter","item","console","log","login","uuid","chooseName","array","map","el","name","first","clearSearch","onOpenModal","idx","onCloseModal","onContinue","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\n// import \"./SuccessContent.css\";\nimport Modal from \"../Modal\";\nimport UserContainer from \"../UserContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../Redux/slice\";\n\nconst SuccessContent = ({ users, handelUpdate }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [initialValue, setInitialValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [chooseItemIdx, setChooseItemIdx] = useState(-1);\n  const reduxState = useSelector((state) => state.users.data);\n\n  useEffect(() => {\n    if (!data.length) {\n      setData(users);\n      dispatch(getUsers(users));\n    }\n  });\n\n  const handelInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handelDelete = (id) => {\n    const arr = reduxState.filter((item) => {\n      console.log(item.login.uuid === id);\n\n      return item.login.uuid !== id;\n    });\n    setData(arr);\n    dispatch(getUsers(arr));\n  };\n\n  const chooseName = (e, item) => {\n    if (!e.target.value) setError(\"Имя не можеть быть пустым\");\n    else setError(\"\");\n    const array = reduxState.map((el) => {\n      if (item.login.uuid === el.login.uuid) item.name.first = e.target.value;\n      return el;\n    });\n\n    setData(array);\n    dispatch(getUsers(array));\n  };\n\n  const clearSearch = () => {\n    setChooseItemIdx(-1);\n    setInputValue(\"\");\n  };\n\n  const onOpenModal = (name, idx) => {\n    setInitialValue(name);\n    setChooseItemIdx(idx);\n    setIsOpenModal(true);\n  };\n\n  const onCloseModal = (item) => {\n    const array = reduxState.map((el) => {\n      if (item.login.uuid === el.login.uuid) item.name.first = initialValue;\n      return el;\n    });\n\n    setIsOpenModal(false);\n    setData(array);\n    dispatch(getUsers(array));\n  };\n\n  const onContinue = (name) => {\n    console.log(name);\n    if (!error.length) {\n      setIsOpenModal(false);\n      const array = reduxState.map((item, idx) => {\n        if (idx === chooseItemIdx) {\n          return {\n            ...item,\n            name: {\n              ...item.name,\n              first: name\n            }\n          };\n        }\n        return item;\n      });\n      console.log(array);\n      dispatch(getUsers(array));\n      setData(array);\n    }\n  };\n\n  return (\n    <div className=\"root\">\n      <button\n        onClick={() => {\n          handelUpdate(\"https://randomuser.me/api/?results=30\");\n          clearSearch();\n        }}\n      >\n        загрузить еще\n      </button>\n      <input value={inputValue} onInput={(e) => handelInput(e)} />\n      {reduxState?.map((item, idx) => {\n        if (item?.name?.first.toLowerCase().includes(inputValue.toLowerCase()))\n          return (\n            <UserContainer\n              item={item}\n              idx={idx}\n              handelDelete={handelDelete}\n              onOpenModal={onOpenModal}\n              key={idx}\n            />\n          );\n      })}\n      <Modal\n        isOpen={isOpenModal}\n        value={data?.[chooseItemIdx]?.name.first}\n        onClose={() => onCloseModal(data?.[chooseItemIdx])}\n        chooseName={(e) => chooseName(e, data?.[chooseItemIdx])}\n        onContinue={(name) => onContinue(name)}\n        error={error}\n      />\n    </div>\n  );\n};\n\nexport default SuccessContent;\n"]},"metadata":{},"sourceType":"module"}