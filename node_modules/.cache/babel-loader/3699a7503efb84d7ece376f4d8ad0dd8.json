{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [data, setData] = useState([]); // const [responseStatus, setResponseStatus] = useState(\"loading\");\n  // const [error, setError] = useState(\"\");\n  // const resp = {}\n\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\"); // resp\n\n  useEffect(() => {// if (data.length) return;\n    // handelUpdate();\n  });\n\n  const user = async () => {\n    console.log((await resp).response);\n    setData((await resp).response);\n    dispatch(getUsers(arr));\n  };\n\n  user();\n  console.log('data', data);\n\n  switch (resp === null || resp === void 0 ? void 0 : resp.isLoading) {\n    case \"error\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: resp === null || resp === void 0 ? void 0 : resp.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n\n    case \"loading\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n\n    case \"success\":\n      return /*#__PURE__*/_jsxDEV(SuccessContent, {\n        users: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return null;\n  }\n}\n\n_s(App, \"QcD3UQ3c22SIkWoqH0Mf+HPnNG8=\", false, function () {\n  return [useGetUser];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/App.js"],"names":["React","useEffect","useState","useGetUser","SuccessContent","App","data","setData","resp","user","console","log","response","dispatch","getUsers","arr","isLoading","error"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAD4B,CAE5B;AACA;AACA;;AACA,QAAMM,IAAI,GAAGL,UAAU,CAAC,uCAAD,CAAvB,CAL4B,CAO5B;;AAEAF,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACD,GAHQ,CAAT;;AAKA,QAAMQ,IAAI,GAAG,YAAY;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,MAAMH,IAAP,EAAaI,QAAzB;AACAL,IAAAA,OAAO,CAAC,CAAC,MAAMC,IAAP,EAAaI,QAAd,CAAP;AACAC,IAAAA,QAAQ,CAACC,QAAQ,CAACC,GAAD,CAAT,CAAR;AACD,GAJD;;AAMAN,EAAAA,IAAI;AAEJC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,IAAnB;;AAEA,UAAQE,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEQ,SAAd;AACE,SAAK,OAAL;AACE,0BAAO;AAAA,kBAAMR,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAES;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,SAAL;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,SAAL;AACE,0BAAO,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEX;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,aAAO,IAAP;AARJ;AAUD;;GAlCuBD,G;UAKTF,U;;;KALSE,G","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  // const [responseStatus, setResponseStatus] = useState(\"loading\");\n  // const [error, setError] = useState(\"\");\n  // const resp = {}\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\");\n\n  // resp\n\n  useEffect(() => {\n    // if (data.length) return;\n    // handelUpdate();\n  });\n\n  const user = async () => {\n    console.log((await resp).response);\n    setData((await resp).response)\n    dispatch(getUsers(arr));\n  }\n\n  user()\n\n  console.log('data',data);\n\n  switch (resp?.isLoading) {\n    case \"error\":\n      return <div>{resp?.error}</div>;\n    case \"loading\":\n      return <div>loader</div>;\n    case \"success\":\n      return <SuccessContent users={data} />;\n    default:\n      return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}