{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postUsers } from \"./Redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [response, setResponse] = useState({\n    data: [],\n    status: 'loading',\n    error: ''\n  }); // const {resp, status, error} = useGetUser(\"https://randomuser.me/api/?results=30\");\n\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\");\n  useEffect(() => {\n    if (response.status === 'loading') user();\n  }, [response]);\n\n  const user = async () => {\n    setResponse(await resp);\n  };\n\n  console.log('data', response);\n\n  switch (response.status) {\n    case \"error\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: resp === null || resp === void 0 ? void 0 : resp.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n\n    case \"loading\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n\n    case \"success\":\n      return /*#__PURE__*/_jsxDEV(SuccessContent, {\n        users: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return null;\n  } // return (\n  // <div>\n  //   {data?.[0]?.gender} \n  // </div>\n  // <SuccessContent users={data} />\n  // <div>{data}</div>\n  // )\n\n}\n\n_s(App, \"vmnmPyP0t1l1p0btmjZO1cWC43o=\", false, function () {\n  return [useDispatch, useGetUser];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/App.js"],"names":["React","useEffect","useState","useGetUser","SuccessContent","useDispatch","useSelector","postUsers","App","dispatch","response","setResponse","data","status","error","resp","user","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CACtC;AACEU,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,MAAM,EAAE,SAFV;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADsC,CAAxC,CAF4B,CAS5B;;AACA,QAAMC,IAAI,GAAGZ,UAAU,CAAC,uCAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAQ,CAACG,MAAT,KAAoB,SAAxB,EAAmCG,IAAI;AACxC,GAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;;AAIA,QAAMM,IAAI,GAAG,YAAY;AACvBL,IAAAA,WAAW,CAAC,MAAMI,IAAP,CAAX;AACD,GAFD;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,QAAnB;;AAEA,UAAQA,QAAQ,CAACG,MAAjB;AACE,SAAK,OAAL;AACE,0BAAO;AAAA,kBAAME,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,SAAL;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,SAAL;AACE,0BAAO,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,aAAO,IAAP;AARJ,GAtB4B,CAgC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;GAvCuBF,G;UACLH,W,EASJF,U;;;KAVSK,G","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postUsers } from \"./Redux/slice\"\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const [response, setResponse] = useState(\n    {\n      data: [],\n      status: 'loading',\n      error: '',\n    }\n  );\n  // const {resp, status, error} = useGetUser(\"https://randomuser.me/api/?results=30\");\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\");\n\n  useEffect(() => {\n    if (response.status === 'loading') user();\n  }, [response]);\n\n  const user = async () => {\n    setResponse(await(resp))\n  }\n\n  console.log('data',response);\n\n  switch (response.status) {\n    case \"error\":\n      return <div>{resp?.error}</div>;\n    case \"loading\":\n      return <div>loader</div>;\n    case \"success\":\n      return <SuccessContent users={response} />;\n    default:\n      return null;\n  }\n  // return (\n  // <div>\n  //   {data?.[0]?.gender} \n  // </div>\n  // <SuccessContent users={data} />\n  // <div>{data}</div>\n  // )\n}\n"]},"metadata":{},"sourceType":"module"}