{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: \"users\",\n  initialState: {\n    data: []\n  },\n  reducers: {\n    postUsers: (state, users) => {\n      state.data = users.payload;\n      console.log(users);\n    },\n    deleteItem: (state, user) => {\n      const arr = state.data.filter(item => item.login.uuid);\n      state.value -= 1;\n    },\n    changeName: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  postUsers,\n  deleteItem,\n  changeName\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/Redux/slice.js"],"names":["createSlice","slice","name","initialState","data","reducers","postUsers","state","users","payload","console","log","deleteItem","user","arr","filter","item","login","uuid","value","changeName","action","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,OADyB;AAG/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAHiB;AAO/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3BD,MAAAA,KAAK,CAACH,IAAN,GAAaI,KAAK,CAACC,OAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KAJO;AAKRI,IAAAA,UAAU,EAAE,CAACL,KAAD,EAAQM,IAAR,KAAiB;AAC3B,YAAMC,GAAG,GAAGP,KAAK,CAACH,IAAN,CAAWW,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAArC,CAAZ;AACAX,MAAAA,KAAK,CAACY,KAAN,IAAe,CAAf;AACD,KARO;AASRC,IAAAA,UAAU,EAAE,CAACb,KAAD,EAAQc,MAAR,KAAmB;AAC7Bd,MAAAA,KAAK,CAACY,KAAN,IAAeE,MAAM,CAACZ,OAAtB;AACD;AAXO;AAPqB,CAAD,CAAzB,C,CAsBP;;AACA,OAAO,MAAM;AAAEH,EAAAA,SAAF;AAAaM,EAAAA,UAAb;AAAyBQ,EAAAA;AAAzB,IAAwCnB,KAAK,CAACqB,OAApD;AAEP,eAAerB,KAAK,CAACsB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: \"users\",\n\n  initialState: {\n    data: []\n  },\n\n  reducers: {\n    postUsers: (state, users) => {\n      state.data = users.payload;\n      console.log(users);\n    },\n    deleteItem: (state, user) => {\n      const arr = state.data.filter(item => item.login.uuid)\n      state.value -= 1;\n    },\n    changeName: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { postUsers, deleteItem, changeName } = slice.actions;\n\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}