{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport useOutsideClick from \"../../Hooks/outsideClick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onContinue,\n    value\n  } = _ref;\n  const [changingValue, setChangingValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [firstRender, setFirstRender] = useState(true);\n  const OutsideClick = useOutsideClick;\n  const modalRef = useRef(null);\n  if (!isOpen) return null;\n  let myGreeting = setTimeout(function () {\n    if (firstRender) {\n      setChangingValue(value);\n      setFirstRender(false);\n    }\n  }, 0);\n\n  const handelInput = e => {\n    setChangingValue(e.target.value);\n  };\n\n  const handelClose = () => {\n    setFirstRender(true);\n    onClose();\n  };\n\n  const handelContinue = () => {\n    setFirstRender(true);\n    onContinue(changingValue);\n  }; // myGreeting();\n\n\n  OutsideClick(isOpen, modalRef, handelClose);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rootModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      id: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        onClick: () => handelClose(),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"\\u0425\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u043C\\u044F?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: changingValue,\n        onInput: e => handelInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !error.lenght && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handelClose(),\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handelContinue(),\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), document.getElementById(\"portal\"));\n};\n\n_s(Modal, \"hzcr8QzMC/Kd4VJUg/6KHqhDNTw=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/components/Modal/index.js"],"names":["React","useState","useRef","ReactDOM","useOutsideClick","Modal","isOpen","onClose","onContinue","value","changingValue","setChangingValue","error","setError","firstRender","setFirstRender","OutsideClick","modalRef","myGreeting","setTimeout","handelInput","e","target","handelClose","handelContinue","createPortal","lenght","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,MAAMC,KAAK,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,GAA2C;AACxD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMe,YAAY,GAAGZ,eAArB;AACA,QAAMa,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AAEA,MAAI,CAACI,MAAL,EAAa,OAAO,IAAP;AAEb,MAAIY,UAAU,GAAGC,UAAU,CAAC,YAAY;AACtC,QAAIL,WAAJ,EAAiB;AACfH,MAAAA,gBAAgB,CAACF,KAAD,CAAhB;AACAM,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAL0B,EAKxB,CALwB,CAA3B;;AAOA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACzBV,IAAAA,gBAAgB,CAACU,CAAC,CAACC,MAAF,CAASb,KAAV,CAAhB;AACD,GAFD;;AAIA,QAAMc,WAAW,GAAG,MAAM;AACxBR,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAR,IAAAA,OAAO;AACR,GAHD;;AAKA,QAAMiB,cAAc,GAAG,MAAM;AAC3BT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,IAAAA,UAAU,CAACE,aAAD,CAAV;AACD,GAHD,CAzBwD,CA8BxD;;;AACAM,EAAAA,YAAY,CAACV,MAAD,EAASW,QAAT,EAAmBM,WAAnB,CAAZ;AAEA,sBAAOpB,QAAQ,CAACsB,YAAT,eACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAER,QAA5B;AAAsC,MAAA,EAAE,EAAC,OAAzC;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAE,MAAMM,WAAW,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,KAAK,EAAEb,aAAd;AAA6B,QAAA,OAAO,EAAGW,CAAD,IAAOD,WAAW,CAACC,CAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,cALF,EAMG,CAACT,KAAK,CAACc,MAAP,iBAAiB;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBd;AAAxB;AAAA;AAAA;AAAA;AAAA,cANpB,eAOE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMW,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMC,cAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,EAeLG,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAfK,CAAP;AAiBD,CAlDD;;GAAMvB,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport useOutsideClick from \"../../Hooks/outsideClick\";\n\nconst Modal = ({ isOpen, onClose, onContinue, value }) => {\n  const [changingValue, setChangingValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [firstRender, setFirstRender] = useState(true);\n  const OutsideClick = useOutsideClick;\n  const modalRef = useRef(null);\n\n  if (!isOpen) return null;\n\n  let myGreeting = setTimeout(function () {\n    if (firstRender) {\n      setChangingValue(value);\n      setFirstRender(false);\n    }\n  }, 0);\n\n  const handelInput = (e) => {\n    setChangingValue(e.target.value);\n  };\n\n  const handelClose = () => {\n    setFirstRender(true);\n    onClose();\n  };\n\n  const handelContinue = () => {\n    setFirstRender(true);\n    onContinue(changingValue);\n  };\n\n  // myGreeting();\n  OutsideClick(isOpen, modalRef, handelClose);\n\n  return ReactDOM.createPortal(\n    <div className=\"rootModal\">\n      <div className=\"modal\" ref={modalRef} id=\"modal\">\n        <button className=\"close\" onClick={() => handelClose()}>\n          x\n        </button>\n        <span className=\"text\">Хотите изменить имя?</span>\n        <input value={changingValue} onInput={(e) => handelInput(e)} />\n        {!error.lenght && <div className=\"error\">{error}</div>}\n        <div className=\"buttons\">\n          <button onClick={() => handelClose()}>Отмена</button>\n          <button onClick={() => handelContinue()}>Продолжить</button>\n        </div>\n      </div>\n    </div>,\n    document.getElementById(\"portal\")\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}