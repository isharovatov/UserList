{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: \"users\",\n  initialState: {\n    data: []\n  },\n  reducers: {\n    postUsers: (state, users) => {\n      state.data = users.payload;\n    },\n    deleteUser: (state, deleteId) => {\n      const arr = state.data.filter(item => item.login.uuid !== deleteId.payload);\n      state.data = arr;\n      console.log(state.data);\n    },\n    changeName: (state, action) => {\n      console.log(action);\n      const arr = state.data.map(item => {\n        if (item.login.uuid === action.payload.user.login.uuid) {\n          return { ...item,\n            name: { ...item.name,\n              first: action.payload.newName\n            }\n          };\n        }\n\n        return item;\n      });\n      state.data = arr;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  postUsers,\n  deleteUser,\n  changeName\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/Redux/slice.js"],"names":["createSlice","slice","name","initialState","data","reducers","postUsers","state","users","payload","deleteUser","deleteId","arr","filter","item","login","uuid","console","log","changeName","action","map","user","first","newName","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,OADyB;AAG/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAHiB;AAO/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3BD,MAAAA,KAAK,CAACH,IAAN,GAAaI,KAAK,CAACC,OAAnB;AACD,KAHO;AAKRC,IAAAA,UAAU,EAAE,CAACH,KAAD,EAAQI,QAAR,KAAqB;AAC/B,YAAMC,GAAG,GAAGL,KAAK,CAACH,IAAN,CAAWS,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoBL,QAAQ,CAACF,OAAvD,CAAZ;AACAF,MAAAA,KAAK,CAACH,IAAN,GAAaQ,GAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACH,IAAlB;AACD,KATO;AAWRe,IAAAA,UAAU,EAAE,CAACZ,KAAD,EAAQa,MAAR,KAAmB;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,YAAMR,GAAG,GAAGL,KAAK,CAACH,IAAN,CAAWiB,GAAX,CAAeP,IAAI,IAAI;AACjC,YAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoBI,MAAM,CAACX,OAAP,CAAea,IAAf,CAAoBP,KAApB,CAA0BC,IAAlD,EAAwD;AACtD,iBAAO,EACL,GAAGF,IADE;AAEJZ,YAAAA,IAAI,EAAE,EACL,GAAGY,IAAI,CAACZ,IADH;AAELqB,cAAAA,KAAK,EAAEH,MAAM,CAACX,OAAP,CAAee;AAFjB;AAFF,WAAP;AAOD;;AACD,eAAOV,IAAP;AACD,OAXW,CAAZ;AAYAP,MAAAA,KAAK,CAACH,IAAN,GAAaQ,GAAb;AACD;AA1BO;AAPqB,CAAD,CAAzB,C,CAqCP;;AACA,OAAO,MAAM;AAAEN,EAAAA,SAAF;AAAaI,EAAAA,UAAb;AAAyBS,EAAAA;AAAzB,IAAwClB,KAAK,CAACwB,OAApD;AAEP,eAAexB,KAAK,CAACyB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: \"users\",\n\n  initialState: {\n    data: []\n  },\n\n  reducers: {\n    postUsers: (state, users) => {\n      state.data = users.payload;\n    },\n\n    deleteUser: (state, deleteId) => {\n      const arr = state.data.filter(item => item.login.uuid !== deleteId.payload);\n      state.data = arr;\n      console.log(state.data);\n    },\n\n    changeName: (state, action) => {\n      console.log(action);\n      const arr = state.data.map(item => {\n        if (item.login.uuid === action.payload.user.login.uuid) {\n          return {\n            ...item,\n             name: {\n              ...item.name,\n              first: action.payload.newName\n             }\n          }\n        } \n        return item;\n      })\n      state.data = arr;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { postUsers, deleteUser, changeName } = slice.actions;\n\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module"}