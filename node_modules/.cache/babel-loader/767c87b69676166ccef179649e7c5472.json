{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/work/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\nimport { useDispatch } from \"react-redux\";\nimport { postUsers } from \"./Redux/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\");\n  useEffect(() => {\n    user();\n  }, []);\n\n  const user = async () => {\n    var _await$resp;\n\n    // dispatch(postUsers());\n    // const users = (await resp).resp;\n    // console.log(users);\n    // if (!!users)\n    dispatch(postUsers((_await$resp = await resp) === null || _await$resp === void 0 ? void 0 : _await$resp.resp)); // setData(resp)\n\n    setData(await resp);\n  };\n\n  console.log(data); // console.log('App', resp);\n  // switch (resp?.isLoading) {\n  //   case \"error\":\n  //     return <div>{resp?.error}</div>;\n  //   case \"loading\":\n  //     return <div>loader</div>;\n  //   case \"success\":\n  //     return <SuccessContent users={data} />;\n  //   default:\n  //     return null;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"5555\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"OGsqCNgQ5uTThcJA2PltrxB76yQ=\", false, function () {\n  return [useDispatch, useGetUser];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/App.js"],"names":["React","useEffect","useState","useGetUser","SuccessContent","useDispatch","postUsers","App","dispatch","data","setData","resp","user","console","log","status"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,IAAI,GAAGR,UAAU,CAAC,uCAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,IAAI,GAAG,YAAY;AAAA;;AACvB;AACA;AACA;AACA;AACAJ,IAAAA,QAAQ,CAACF,SAAS,gBAAE,MAAMK,IAAR,gDAAC,YAAcA,IAAf,CAAV,CAAR,CALuB,CAMvB;;AACAD,IAAAA,OAAO,CAAC,MAAMC,IAAP,CAAP;AACD,GARD;;AAUAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAnB4B,CAqB5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACA;AAAA,cACGA,IAAI,CAACM,MAAL,KAAgB,SAAhB,iBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;GAvCuBR,G;UACLF,W,EAEJF,U;;;KAHSI,G","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport useGetUser from \"./Hooks/getUsers\";\nimport SuccessContent from \"./components/SuccessContent\";\nimport { useDispatch } from \"react-redux\";\nimport { postUsers } from \"./Redux/slice\"\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([]);\n  const resp = useGetUser(\"https://randomuser.me/api/?results=30\");\n\n  useEffect(() => {\n    user();\n  }, []);\n\n  const user = async () => {\n    // dispatch(postUsers());\n    // const users = (await resp).resp;\n    // console.log(users);\n    // if (!!users)\n    dispatch(postUsers((await resp)?.resp));\n    // setData(resp)\n    setData(await(resp))\n  }\n\n  console.log(data);\n\n  // console.log('App', resp);\n\n  // switch (resp?.isLoading) {\n  //   case \"error\":\n  //     return <div>{resp?.error}</div>;\n  //   case \"loading\":\n  //     return <div>loader</div>;\n  //   case \"success\":\n  //     return <SuccessContent users={data} />;\n  //   default:\n  //     return null;\n  // }\n\n  return (\n  <div>\n    {data.status === 'success' && <div>5555</div>}\n\n  </div>)\n}\n"]},"metadata":{},"sourceType":"module"}