{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport getUsers from \"../Redux/slice\";\n\nconst useGetUser = async url => {\n  _s();\n\n  const [status, setStatus] = useState();\n  const [error, setError] = useState();\n  const [resp, setResp] = useState(); // const getUsers = async () => {\n  //   try{\n  //     let response = await fetch(url);\n  //     let json = await response.json();\n  //     console.log('try hook', json);\n  //     console.log(response.ok);\n  //     if (response.ok) return json.results\n  //     setResp(json.results);\n  //     setStatus(\"success\");\n  //   }\n  //    catch(error) {\n  //     setError(error);\n  //     setStatus(\"error\");\n  //     console.log('error');\n  //   }\n  // }\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n\n  let re; // return { resp, status, error };\n};\n\n_s(useGetUser, \"PU8CdsdQmM7jhj1oqA5Utx/PlgY=\");\n\nexport default useGetUser;","map":{"version":3,"sources":["/Users/user/Desktop/work/my-app/src/Hooks/getUsers.js"],"names":["useEffect","useRef","useState","useDispatch","getUsers","useGetUser","url","status","setStatus","error","setError","resp","setResp","re"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,UAAU,GAAG,MAAOC,GAAP,IAAe;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC,CAHgC,CAKhC;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAIW,EAAJ,CA5BgC,CA8BhC;AACD,CA/BD;;GAAMR,U;;AAiCN,eAAeA,UAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport getUsers from \"../Redux/slice\";\n\nconst useGetUser = async (url) => {\n  const [status, setStatus] = useState();\n  const [error, setError] = useState();\n  const [resp, setResp] = useState();\n\n  // const getUsers = async () => {\n  //   try{\n  //     let response = await fetch(url);\n  //     let json = await response.json();\n\n  //     console.log('try hook', json);\n  //     console.log(response.ok);\n\n  //     if (response.ok) return json.results\n\n  //     setResp(json.results);\n  //     setStatus(\"success\");\n  //   }\n  //    catch(error) {\n  //     setError(error);\n  //     setStatus(\"error\");\n  //     console.log('error');\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n  let re\n\n  // return { resp, status, error };\n};\n\nexport default useGetUser;\n"]},"metadata":{},"sourceType":"module"}